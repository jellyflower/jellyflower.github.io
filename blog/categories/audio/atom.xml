<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Audio | The Place Where Wishes Come True]]></title>
  <link href="http://jellyflower.github.io/blog/categories/audio/atom.xml" rel="self"/>
  <link href="http://jellyflower.github.io/"/>
  <updated>2014-08-14T00:12:03-04:00</updated>
  <id>http://jellyflower.github.io/</id>
  <author>
    <name><![CDATA[Jellyflower]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Qaac: The New Preferred Way to Encode AAC]]></title>
    <link href="http://jellyflower.github.io/blog/2013/06/18/qaac-the-new-preferred-way-to-encode-aac/"/>
    <updated>2013-06-18T23:13:00-04:00</updated>
    <id>http://jellyflower.github.io/blog/2013/06/18/qaac-the-new-preferred-way-to-encode-aac</id>
    <content type="html"><![CDATA[<p>It has long been widely believed that <a href="http://www.nero.com/enu/company/about-nero/nero-aac-codec.php">Nero AAC Codec</a> generally produces AAC of the best quality. However, recently several studies indicate that Apple encoder already surpasses Nero AAC Codec in terms of quality.</p>

<p>The actual encoding code is shipped with Apple Application Support as a form of a library. Apple doesn’t provide a more convenient way to invoke the encoder than using iTunes. Fortunately, there is an open source project called <a href="https://sites.google.com/site/qaacpage/">qaac</a> fulfilling that role.</p>

<p>To produce AAC exactly equivalent to the so-called iTunes Plus quality, use the following command:</p>

<pre><code>qaac -v256 -q2 INPUT
</code></pre>

<p>I’m currently encoding in qaac’s True VBR mode to prepare music for my iPhone. The command is like this:</p>

<pre><code>qaac -V63 -q2 INPUT
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Have FFmpeg Output Audio]]></title>
    <link href="http://jellyflower.github.io/blog/2012/03/08/have-ffmpeg-output-audio/"/>
    <updated>2012-03-08T19:05:00-05:00</updated>
    <id>http://jellyflower.github.io/blog/2012/03/08/have-ffmpeg-output-audio</id>
    <content type="html"><![CDATA[<p>Of course the most straightforward way is to output PCM wrapped in WAV format. Things will go pretty well with pcm_s16le, pcm_s24le and pcm_s32le, but not with the unsigned, which I don&rsquo;t know why.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Downmixing 5.1 Surround Sound to Stereo]]></title>
    <link href="http://jellyflower.github.io/blog/2012/03/08/downmixing-5-dot-1-surround-sound-to-stereo/"/>
    <updated>2012-03-08T18:53:00-05:00</updated>
    <id>http://jellyflower.github.io/blog/2012/03/08/downmixing-5-dot-1-surround-sound-to-stereo</id>
    <content type="html"><![CDATA[<p>By far I think using FFmpeg is still the best way to do it. A command like this will finish the job:</p>

<pre><code>ffmpeg -i INPUT -vn -ac 2 -acodec CODEC OUTPUT
</code></pre>
]]></content>
  </entry>
  
</feed>
